{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/components/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport FloatingNoteBox from './FloatingNoteBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst extractTextContent = content => {\n  if (Array.isArray(content)) {\n    return content.map(utterance => utterance.text).join(' ');\n  } else if (typeof content === 'string') {\n    try {\n      const parsedContent = JSON.parse(content);\n      if (parsedContent.results && parsedContent.results.channels) {\n        return parsedContent.results.channels[0].alternatives[0].transcript;\n      }\n    } catch (error) {\n      // If parsing fails, return the original string\n    }\n    return content;\n  }\n  return 'No content available';\n};\nconst Dashboard = ({\n  onAudioRecordingStart,\n  onAudioRecordingStop\n}) => {\n  _s();\n  const [transcripts, setTranscripts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [selectedTranscript, setSelectedTranscript] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedText, setSelectedText] = useState({\n    start: 0,\n    end: 0,\n    text: ''\n  });\n  const [comments, setComments] = useState([]);\n  const [commentType, setCommentType] = useState('positive');\n  const [commentFile, setCommentFile] = useState(null);\n  const [commentContent, setCommentContent] = useState('');\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [hoveredNote, setHoveredNote] = useState(null);\n  const [pinnedNote, setPinnedNote] = useState(null);\n  const handleFileChange = event => {\n    if (event.target.files) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('transcript', selectedFile);\n    try {\n      const response = await axios.post('http://localhost:8000/upload-transcript', formData);\n      console.log('Transcript uploaded successfully:', response.data);\n      setSelectedFile(null);\n      fetchTranscripts(); // Refresh the transcript list\n    } catch (error) {\n      console.error('Error uploading transcript:', error);\n      if (axios.isAxiosError(error) && error.response) {\n        setError(`Failed to upload transcript: ${error.response.data.message || error.message}`);\n      } else {\n        setError('Failed to upload transcript. Please try again.');\n      }\n    }\n  };\n  useEffect(() => {\n    fetchTranscripts();\n  }, []);\n  const fetchTranscripts = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('http://localhost:8000/api/transcripts');\n      const formattedTranscripts = response.data.map((transcript, index) => {\n        const extractedContent = extractTextContent(transcript.content);\n        return {\n          transcriptId: `Transcript ${index + 1}`,\n          content: extractedContent,\n          fileType: transcript.fileType\n        };\n      });\n      setTranscripts(formattedTranscripts);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching transcripts:', error);\n      setError('Failed to fetch transcripts. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRecordButtonClick = async () => {\n    if (isRecording) {\n      const audioBlob = await onAudioRecordingStop();\n      setIsRecording(false);\n      if (audioBlob) {\n        await uploadAudio(audioBlob);\n      }\n    } else {\n      onAudioRecordingStart();\n      setIsRecording(true);\n    }\n  };\n  const uploadAudio = async audioBlob => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recorded_audio.wav');\n    try {\n      const response = await axios.post('http://localhost:8000/upload-audio', formData);\n      console.log('Audio uploaded and transcribed successfully:', response.data);\n      fetchTranscripts(); // Refresh the transcript list\n    } catch (error) {\n      console.error('Error uploading and transcribing audio:', error);\n      if (axios.isAxiosError(error) && error.response) {\n        setError(`Failed to upload and transcribe audio: ${error.response.data.message || error.message}`);\n      } else {\n        setError('Failed to upload and transcribe audio. Please try again.');\n      }\n    }\n  };\n  const handleTranscriptClick = transcript => {\n    setSelectedTranscript(transcript);\n  };\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0 && selectedTranscript) {\n      const range = selection.getRangeAt(0);\n      const preSelectionRange = range.cloneRange();\n      const parentElement = range.commonAncestorContainer.nodeType === Node.TEXT_NODE ? range.commonAncestorContainer.parentElement : range.commonAncestorContainer;\n      if (parentElement) {\n        preSelectionRange.selectNodeContents(parentElement);\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\n        const start = preSelectionRange.toString().length;\n        const end = start + range.toString().length;\n        const text = selection.toString();\n        if (text.length > 0) {\n          setSelectedText({\n            start: Number(start),\n            end: Number(end),\n            text\n          });\n        }\n      }\n    }\n  };\n  const highlightText = (content, comments) => {\n    const highlights = comments.flatMap(comment => [{\n      index: comment.startIndex || 0,\n      type: 'start',\n      commentId: comment.commentId,\n      commentType: comment.type\n    }, {\n      index: comment.endIndex || 0,\n      type: 'end',\n      commentId: comment.commentId,\n      commentType: comment.type\n    }]).sort((a, b) => a.index - b.index || (a.type === 'start' ? -1 : 1));\n    let result = [];\n    let lastIndex = 0;\n    let activeHighlights = {};\n    for (let i = 0; i < highlights.length; i++) {\n      const highlight = highlights[i];\n      if (highlight.index > lastIndex) {\n        result.push(content.slice(lastIndex, highlight.index));\n      }\n      if (highlight.type === 'start') {\n        activeHighlights[highlight.commentId] = highlight.commentType;\n      } else {\n        delete activeHighlights[highlight.commentId];\n      }\n      const backgroundColor = Object.values(activeHighlights).reduce((color, type) => {\n        if (type === 'negative') return 'lightcoral';\n        if (type === 'positive') return color === 'lightcoral' ? 'lightyellow' : 'lightgreen';\n        return 'lightyellow';\n      }, 'transparent');\n      if (Object.keys(activeHighlights).length > 0) {\n        var _highlights;\n        const nextIndex = ((_highlights = highlights[i + 1]) === null || _highlights === void 0 ? void 0 : _highlights.index) || content.length;\n        result.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor,\n            position: 'relative'\n          },\n          \"data-comment-id\": Object.keys(activeHighlights).join(','),\n          \"data-comment-content\": Object.keys(activeHighlights).map(id => {\n            const comment = comments.find(c => c.commentId === id);\n            return (comment === null || comment === void 0 ? void 0 : comment.content) || '';\n          }).join('\\n\\n'),\n          \"data-comment-type\": Object.values(activeHighlights).map(id => {\n            var _comments$find;\n            return (_comments$find = comments.find(c => c.commentId === id)) === null || _comments$find === void 0 ? void 0 : _comments$find.type;\n          }).join(','),\n          onMouseEnter: handleHighlightHover,\n          onMouseLeave: handleHighlightLeave,\n          onClick: handleHighlightClick,\n          children: content.slice(highlight.index, nextIndex)\n        }, `highlight-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this));\n        lastIndex = nextIndex;\n      } else {\n        lastIndex = highlight.index;\n      }\n    }\n    if (lastIndex < content.length) {\n      result.push(content.slice(lastIndex));\n    }\n    return result;\n  };\n  const addOrUpdateComment = async () => {\n    if (!selectedTranscript || !commentContent || !selectedText.text) return;\n    const formData = new FormData();\n    formData.append('transcriptId', selectedTranscript.transcriptId);\n    formData.append('userId', 'currentUserId'); // Replace with actual user ID\n    formData.append('content', commentContent);\n    formData.append('timestamp', new Date().toISOString());\n    formData.append('startIndex', selectedText.start.toString());\n    formData.append('endIndex', selectedText.end.toString());\n    formData.append('type', commentType);\n    if (commentFile) {\n      formData.append('fileAttachment', commentFile);\n    }\n    try {\n      let response;\n      if (editingCommentId) {\n        const {\n          data\n        } = await axios.put(`http://localhost:8000/api/comment`, {\n          ...Object.fromEntries(formData),\n          commentId: editingCommentId\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        response = data;\n        setComments(prevComments => prevComments.map(comment => comment.commentId === editingCommentId ? {\n          ...response.updatedAttributes,\n          startIndex: Number(response.updatedAttributes.startIndex),\n          endIndex: Number(response.updatedAttributes.endIndex)\n        } : comment));\n      } else {\n        const {\n          data\n        } = await axios.post('http://localhost:8000/api/comment', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        response = data;\n        setComments(prevComments => [...prevComments, {\n          ...response.comment,\n          startIndex: Number(response.comment.startIndex),\n          endIndex: Number(response.comment.endIndex)\n        }]);\n      }\n      setCommentContent('');\n      setCommentFile(null);\n      setSelectedText({\n        start: 0,\n        end: 0,\n        text: ''\n      });\n      setEditingCommentId(null);\n    } catch (error) {\n      console.error('Error adding/updating comment:', error);\n      setError('Failed to add/update comment. Please try again.');\n    }\n  };\n  const deleteComment = async commentId => {\n    if (!selectedTranscript) return;\n    try {\n      await axios.delete(`http://localhost:8000/api/comment`, {\n        data: {\n          transcriptId: selectedTranscript.transcriptId,\n          commentId\n        }\n      });\n      setComments(prevComments => prevComments.filter(comment => comment.commentId !== commentId));\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment. Please try again.');\n    }\n  };\n  useEffect(() => {\n    if (selectedTranscript) {\n      fetchCommentsForTranscript(selectedTranscript.transcriptId);\n    }\n  }, [selectedTranscript]);\n  const fetchCommentsForTranscript = async transcriptId => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/comment?transcriptId=${transcriptId}`);\n      setComments(response.data.map(comment => ({\n        ...comment,\n        startIndex: Number(comment.startIndex),\n        endIndex: Number(comment.endIndex)\n      })));\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      setError('Failed to fetch comments. Please try again.');\n    }\n  };\n  const handleHighlightHover = event => {\n    const target = event.target;\n    if (target.dataset.commentId) {\n      const rect = target.getBoundingClientRect();\n      const scrollY = window.scrollY || window.pageYOffset;\n      const content = target.dataset.commentContent || '';\n      setHoveredNote({\n        content,\n        position: {\n          x: rect.left + rect.width / 2,\n          y: rect.top + scrollY\n        }\n      });\n    }\n  };\n  const handleHighlightLeave = () => {\n    setHoveredNote(null);\n  };\n  const handleHighlightClick = event => {\n    const target = event.target;\n    if (target.dataset.commentId) {\n      const rect = target.getBoundingClientRect();\n      const scrollY = window.scrollY || window.pageYOffset;\n      const content = target.dataset.commentContent || '';\n      setPinnedNote({\n        content,\n        position: {\n          x: rect.left + rect.width / 2,\n          y: rect.top + scrollY\n        }\n      });\n    } else {\n      setPinnedNote(null);\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (pinnedNote && !event.target.closest('[data-comment-id]')) {\n        setPinnedNote(null);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [pinnedNote]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transcripts Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRecordButtonClick,\n      children: isRecording ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".txt,.json,.pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        disabled: !selectedFile,\n        children: \"Upload Transcript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading transcripts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-list\",\n      children: transcripts.map(transcript => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-item\",\n        onClick: () => handleTranscriptClick(transcript),\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: transcript.transcriptId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this)\n      }, transcript.transcriptId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this), selectedTranscript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          display: 'flex',\n          maxWidth: '90%',\n          maxHeight: '90%',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setSelectedTranscript(null),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-text\",\n          style: {\n            flex: '1',\n            marginRight: '20px',\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedTranscript.transcriptId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onMouseUp: handleTextSelection,\n            onMouseOver: handleHighlightHover,\n            onMouseOut: handleHighlightLeave,\n            children: highlightText(selectedTranscript.content, comments)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-controls\",\n          style: {\n            width: '300px',\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: commentContent,\n            onChange: e => setCommentContent(e.target.value),\n            placeholder: \"Enter your comment\",\n            style: {\n              width: '100%',\n              minHeight: '100px',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: commentType,\n            onChange: e => setCommentType(e.target.value),\n            style: {\n              width: '100%',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"positive\",\n              children: \"Positive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"negative\",\n              children: \"Negative\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"suggestion\",\n              children: \"Suggestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => e.target.files && setCommentFile(e.target.files[0]),\n            style: {\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addOrUpdateComment,\n            className: \"comment-button\",\n            style: {\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              width: '100%'\n            },\n            children: editingCommentId ? 'Update Comment' : 'Add Comment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), editingCommentId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditingCommentId(null);\n              setCommentContent('');\n              setCommentType('positive');\n              setCommentFile(null);\n            },\n            className: \"comment-button\",\n            style: {\n              backgroundColor: '#f44336',\n              color: 'white',\n              width: '100%'\n            },\n            children: \"Cancel Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-box\",\n              \"data-comment-id\": comment.commentId,\n              style: {\n                borderLeft: `5px solid ${comment.type === 'negative' ? 'lightcoral' : comment.type === 'positive' ? 'lightgreen' : 'lightyellow'}`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Selected text:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 24\n                }, this), \" \", selectedTranscript.content.slice(comment.startIndex, comment.endIndex)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Comment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 24\n                }, this), \" \", comment.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 24\n                }, this), \" \", comment.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this), comment.fileAttachment && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Attachment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 51\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: comment.fileAttachment,\n                  children: \"View File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 48\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-button delete-button\",\n                  onClick: () => deleteComment(comment.commentId),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-button edit-button\",\n                  onClick: () => {\n                    setEditingCommentId(comment.commentId);\n                    setCommentContent(comment.content);\n                    setCommentType(comment.type);\n                    setSelectedText({\n                      start: comment.startIndex || 0,\n                      end: comment.endIndex || 0,\n                      text: selectedTranscript.content.slice(comment.startIndex, comment.endIndex)\n                    });\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this)]\n            }, comment.commentId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this), hoveredNote && !pinnedNote && /*#__PURE__*/_jsxDEV(FloatingNoteBox, {\n      content: hoveredNote.content,\n      position: hoveredNote.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }, this), pinnedNote && /*#__PURE__*/_jsxDEV(FloatingNoteBox, {\n      content: pinnedNote.content,\n      position: pinnedNote.position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"18cUp4qY4F6c7Vei+Bew5DDfvBM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","FloatingNoteBox","jsxDEV","_jsxDEV","extractTextContent","content","Array","isArray","map","utterance","text","join","parsedContent","JSON","parse","results","channels","alternatives","transcript","error","Dashboard","onAudioRecordingStart","onAudioRecordingStop","_s","transcripts","setTranscripts","loading","setLoading","setError","isRecording","setIsRecording","selectedTranscript","setSelectedTranscript","selectedFile","setSelectedFile","selectedText","setSelectedText","start","end","comments","setComments","commentType","setCommentType","commentFile","setCommentFile","commentContent","setCommentContent","editingCommentId","setEditingCommentId","hoveredNote","setHoveredNote","pinnedNote","setPinnedNote","handleFileChange","event","target","files","handleFileUpload","formData","FormData","append","response","post","console","log","data","fetchTranscripts","isAxiosError","message","get","formattedTranscripts","index","extractedContent","transcriptId","fileType","handleRecordButtonClick","audioBlob","uploadAudio","handleTranscriptClick","handleTextSelection","selection","window","getSelection","rangeCount","range","getRangeAt","preSelectionRange","cloneRange","parentElement","commonAncestorContainer","nodeType","Node","TEXT_NODE","selectNodeContents","setEnd","startContainer","startOffset","toString","length","Number","highlightText","highlights","flatMap","comment","startIndex","type","commentId","endIndex","sort","a","b","result","lastIndex","activeHighlights","i","highlight","push","slice","backgroundColor","Object","values","reduce","color","keys","_highlights","nextIndex","style","position","id","find","c","_comments$find","onMouseEnter","handleHighlightHover","onMouseLeave","handleHighlightLeave","onClick","handleHighlightClick","children","fileName","_jsxFileName","lineNumber","columnNumber","addOrUpdateComment","Date","toISOString","put","fromEntries","headers","prevComments","updatedAttributes","deleteComment","delete","filter","fetchCommentsForTranscript","dataset","rect","getBoundingClientRect","scrollY","pageYOffset","x","left","width","y","top","handleClickOutside","closest","document","addEventListener","removeEventListener","className","onChange","accept","disabled","display","maxWidth","maxHeight","flex","marginRight","overflowY","onMouseUp","onMouseOver","onMouseOut","value","e","placeholder","minHeight","marginBottom","borderLeft","fileAttachment","href","_c","$RefreshReg$"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport FloatingNoteBox from './FloatingNoteBox';\n\n\ninterface Utterance {\n  speaker: string;\n  text: string;\n}\n\ninterface Transcript {\n  transcriptId: string;\n  content: string;\n  fileType: string;\n}\n\ninterface DashboardProps {\n  onAudioRecordingStart: () => void;\n  onAudioRecordingStop: () => Promise<Blob | null>;\n}\n\ninterface UpdatedComment {\n  commentId: string;\n  content: string;\n  type: string;\n  fileAttachment?: string;\n  startIndex?: number;\n  endIndex?: number;\n}\n\ninterface CommentResponse {\n  comment: UpdatedComment;\n  updatedAttributes: UpdatedComment;\n}\n\ninterface APIComment {\n  commentId: string;\n  content: string;\n  type: string;\n  fileAttachment?: string;\n  startIndex: string | number;\n  endIndex: string | number;\n}\n\nconst extractTextContent = (content: Utterance[] | string): string => {\n  if (Array.isArray(content)) {\n    return content.map(utterance => utterance.text).join(' ');\n  } else if (typeof content === 'string') {\n    try {\n      const parsedContent = JSON.parse(content);\n      if (parsedContent.results && parsedContent.results.channels) {\n        return parsedContent.results.channels[0].alternatives[0].transcript;\n      }\n    } catch (error) {\n      // If parsing fails, return the original string\n    }\n    return content;\n  }\n  return 'No content available';\n};\n\nconst Dashboard: React.FC<DashboardProps> = ({ onAudioRecordingStart, onAudioRecordingStop }) => {\n  const [transcripts, setTranscripts] = useState<Transcript[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [selectedTranscript, setSelectedTranscript] = useState<Transcript | null>(null);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [selectedText, setSelectedText] = useState({ start: 0, end: 0, text: '' });\n  const [comments, setComments] = useState<Array<{\n    commentId: string;\n    content: string;\n    type: string;\n    fileAttachment?: string;\n    startIndex?: number;\n    endIndex?: number;\n  }>>([]);\n  const [commentType, setCommentType] = useState('positive');\n  const [commentFile, setCommentFile] = useState<File | null>(null);\n  const [commentContent, setCommentContent] = useState('');\n  const [editingCommentId, setEditingCommentId] = useState<string | null>(null);\n  const [hoveredNote, setHoveredNote] = useState<{ content: string; position: { x: number; y: number } } | null>(null);\n  const [pinnedNote, setPinnedNote] = useState<{ content: string; position: { x: number; y: number } } | null>(null);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file to upload.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('transcript', selectedFile);\n\n    try {\n      const response = await axios.post('http://localhost:8000/upload-transcript', formData);\n      console.log('Transcript uploaded successfully:', response.data);\n      setSelectedFile(null);\n      fetchTranscripts(); // Refresh the transcript list\n    } catch (error) {\n      console.error('Error uploading transcript:', error);\n      if (axios.isAxiosError(error) && error.response) {\n        setError(`Failed to upload transcript: ${error.response.data.message || error.message}`);\n      } else {\n        setError('Failed to upload transcript. Please try again.');\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTranscripts();\n  }, []);\n\n  const fetchTranscripts = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get<Transcript[]>('http://localhost:8000/api/transcripts');\n      const formattedTranscripts = response.data.map((transcript, index) => {\n        const extractedContent = extractTextContent(transcript.content);\n        return {\n          transcriptId: `Transcript ${index + 1}`,\n          content: extractedContent,\n          fileType: transcript.fileType\n        };\n      });\n      setTranscripts(formattedTranscripts);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching transcripts:', error);\n      setError('Failed to fetch transcripts. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRecordButtonClick = async () => {\n    if (isRecording) {\n      const audioBlob = await onAudioRecordingStop();\n      setIsRecording(false);\n      if (audioBlob) {\n        await uploadAudio(audioBlob);\n      }\n    } else {\n      onAudioRecordingStart();\n      setIsRecording(true);\n    }\n  };\n\n  const uploadAudio = async (audioBlob: Blob) => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recorded_audio.wav');\n    try {\n      const response = await axios.post('http://localhost:8000/upload-audio', formData);\n      console.log('Audio uploaded and transcribed successfully:', response.data);\n      fetchTranscripts(); // Refresh the transcript list\n    } catch (error) {\n      console.error('Error uploading and transcribing audio:', error);\n      if (axios.isAxiosError(error) && error.response) {\n        setError(`Failed to upload and transcribe audio: ${error.response.data.message || error.message}`);\n      } else {\n        setError('Failed to upload and transcribe audio. Please try again.');\n      }\n    }\n  };\n\n  const handleTranscriptClick = (transcript: Transcript) => {\n    setSelectedTranscript(transcript);\n  };\n\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    if (selection && selection.rangeCount > 0 && selectedTranscript) {\n      const range = selection.getRangeAt(0);\n      const preSelectionRange = range.cloneRange();\n      const parentElement = range.commonAncestorContainer.nodeType === Node.TEXT_NODE\n        ? range.commonAncestorContainer.parentElement\n        : range.commonAncestorContainer;\n      \n      if (parentElement) {\n        preSelectionRange.selectNodeContents(parentElement);\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\n        const start = preSelectionRange.toString().length;\n        const end = start + range.toString().length;\n        const text = selection.toString();\n        if (text.length > 0) {\n          setSelectedText({ start: Number(start), end: Number(end), text });\n        }\n      }\n    }\n  };\n\n  const highlightText = (content: string, comments: Array<UpdatedComment>) => {\n    const highlights = comments.flatMap(comment => [\n      { index: comment.startIndex || 0, type: 'start', commentId: comment.commentId, commentType: comment.type },\n      { index: comment.endIndex || 0, type: 'end', commentId: comment.commentId, commentType: comment.type }\n    ]).sort((a, b) => a.index - b.index || (a.type === 'start' ? -1 : 1));\n\n    let result = [];\n    let lastIndex = 0;\n    let activeHighlights: { [key: string]: string } = {};\n\n    for (let i = 0; i < highlights.length; i++) {\n      const highlight = highlights[i];\n      \n      if (highlight.index > lastIndex) {\n        result.push(content.slice(lastIndex, highlight.index));\n      }\n\n      if (highlight.type === 'start') {\n        activeHighlights[highlight.commentId] = highlight.commentType;\n      } else {\n        delete activeHighlights[highlight.commentId];\n      }\n\n      const backgroundColor = Object.values(activeHighlights).reduce((color, type) => {\n        if (type === 'negative') return 'lightcoral';\n        if (type === 'positive') return color === 'lightcoral' ? 'lightyellow' : 'lightgreen';\n        return 'lightyellow';\n      }, 'transparent');\n\n      if (Object.keys(activeHighlights).length > 0) {\n        const nextIndex = highlights[i + 1]?.index || content.length;\n        result.push(\n          <span\n            key={`highlight-${i}`}\n            style={{ backgroundColor, position: 'relative' }}\n            data-comment-id={Object.keys(activeHighlights).join(',')}\n            data-comment-content={Object.keys(activeHighlights).map(id => {\n              const comment = comments.find(c => c.commentId === id);\n              return comment?.content || '';\n            }).join('\\n\\n')}\n            data-comment-type={Object.values(activeHighlights).map(id => comments.find(c => c.commentId === id)?.type).join(',')}\n            onMouseEnter={handleHighlightHover}\n            onMouseLeave={handleHighlightLeave}\n            onClick={handleHighlightClick}\n          >\n            {content.slice(highlight.index, nextIndex)}\n          </span>\n        );\n        lastIndex = nextIndex;\n      } else {\n        lastIndex = highlight.index;\n      }\n    }\n\n    if (lastIndex < content.length) {\n      result.push(content.slice(lastIndex));\n    }\n\n    return result;\n  };\n\n  const addOrUpdateComment = async () => {\n    if (!selectedTranscript || !commentContent || !selectedText.text) return;\n\n    const formData = new FormData();\n    formData.append('transcriptId', selectedTranscript.transcriptId);\n    formData.append('userId', 'currentUserId'); // Replace with actual user ID\n    formData.append('content', commentContent);\n    formData.append('timestamp', new Date().toISOString());\n    formData.append('startIndex', selectedText.start.toString());\n    formData.append('endIndex', selectedText.end.toString());\n    formData.append('type', commentType);\n    if (commentFile) {\n      formData.append('fileAttachment', commentFile);\n    }\n\n    try {\n      let response: CommentResponse;\n      if (editingCommentId) {\n        const { data } = await axios.put<CommentResponse>(`http://localhost:8000/api/comment`, \n          { ...Object.fromEntries(formData), commentId: editingCommentId },\n          { headers: { 'Content-Type': 'application/json' } }\n        );\n        response = data;\n        setComments(prevComments => prevComments.map(comment => \n          comment.commentId === editingCommentId ? {...response.updatedAttributes, startIndex: Number(response.updatedAttributes.startIndex), endIndex: Number(response.updatedAttributes.endIndex)} : comment\n        ));\n      } else {\n        const { data } = await axios.post<CommentResponse>('http://localhost:8000/api/comment', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' }\n        });\n        response = data;\n        setComments(prevComments => [...prevComments, {\n          ...response.comment,\n          startIndex: Number(response.comment.startIndex),\n          endIndex: Number(response.comment.endIndex)\n        }]);\n      }\n      \n      setCommentContent('');\n      setCommentFile(null);\n      setSelectedText({ start: 0, end: 0, text: '' });\n      setEditingCommentId(null);\n    } catch (error) {\n      console.error('Error adding/updating comment:', error);\n      setError('Failed to add/update comment. Please try again.');\n    }\n  };\n\n  const deleteComment = async (commentId: string) => {\n    if (!selectedTranscript) return;\n    try {\n      await axios.delete(`http://localhost:8000/api/comment`, {\n        data: { transcriptId: selectedTranscript.transcriptId, commentId }\n      });\n      setComments(prevComments => prevComments.filter(comment => comment.commentId !== commentId));\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      setError('Failed to delete comment. Please try again.');\n    }\n  };\n\n  useEffect(() => {\n    if (selectedTranscript) {\n      fetchCommentsForTranscript(selectedTranscript.transcriptId);\n    }\n  }, [selectedTranscript]);\n\n  const fetchCommentsForTranscript = async (transcriptId: string) => {\n    try {\n      const response = await axios.get<APIComment[]>(`http://localhost:8000/api/comment?transcriptId=${transcriptId}`);\n      setComments(response.data.map((comment: APIComment) => ({\n        ...comment,\n        startIndex: Number(comment.startIndex),\n        endIndex: Number(comment.endIndex)\n      })));\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n      setError('Failed to fetch comments. Please try again.');\n    }\n  };\n\n  const handleHighlightHover = (event: React.MouseEvent<HTMLSpanElement>) => {\n    const target = event.target as HTMLSpanElement;\n    if (target.dataset.commentId) {\n      const rect = target.getBoundingClientRect();\n      const scrollY = window.scrollY || window.pageYOffset;\n      const content = target.dataset.commentContent || '';\n      setHoveredNote({\n        content,\n        position: { x: rect.left + rect.width / 2, y: rect.top + scrollY },\n      });\n    }\n  };\n\n  const handleHighlightLeave = () => {\n    setHoveredNote(null);\n  };\n\n  const handleHighlightClick = (event: React.MouseEvent<HTMLSpanElement>) => {\n    const target = event.target as HTMLSpanElement;\n    if (target.dataset.commentId) {\n      const rect = target.getBoundingClientRect();\n      const scrollY = window.scrollY || window.pageYOffset;\n      const content = target.dataset.commentContent || '';\n      setPinnedNote({\n        content,\n        position: { x: rect.left + rect.width / 2, y: rect.top + scrollY },\n      });\n    } else {\n      setPinnedNote(null);\n    }\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (pinnedNote && !(event.target as HTMLElement).closest('[data-comment-id]')) {\n        setPinnedNote(null);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [pinnedNote]);\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Transcripts Dashboard</h1>\n      <button onClick={handleRecordButtonClick}>\n        {isRecording ? 'Stop Recording' : 'Start Recording'}\n      </button>\n      <div className=\"file-upload\">\n        <input type=\"file\" onChange={handleFileChange} accept=\".txt,.json,.pdf\" />\n        <button onClick={handleFileUpload} disabled={!selectedFile}>\n          Upload Transcript\n        </button>\n      </div>\n      {error && <p className=\"error\">{error}</p>}\n      {loading ? (\n        <p>Loading transcripts...</p>\n      ) : (\n        <div className=\"transcript-list\">\n          {transcripts.map((transcript) => (\n            <div\n              key={transcript.transcriptId}\n              className=\"transcript-item\"\n              onClick={() => handleTranscriptClick(transcript)}\n            >\n              <h3>{transcript.transcriptId}</h3>\n            </div>\n          ))}\n        </div>\n      )}\n      {selectedTranscript && (\n        <div className=\"modal\">\n          <div className=\"modal-content\" style={{ display: 'flex', maxWidth: '90%', maxHeight: '90%', position: 'relative' }}>\n            <button className=\"close-button\" onClick={() => setSelectedTranscript(null)}>Close</button>\n            <div className=\"transcript-text\" style={{ flex: '1', marginRight: '20px', overflowY: 'auto' }}>\n              <h2>{selectedTranscript.transcriptId}</h2>\n              <div \n                onMouseUp={handleTextSelection}\n                onMouseOver={handleHighlightHover}\n                onMouseOut={handleHighlightLeave}\n              >\n                {highlightText(selectedTranscript.content, comments)}\n              </div>\n            </div>\n            <div className=\"comment-controls\" style={{ width: '300px', overflowY: 'auto' }}>\n              <textarea\n                value={commentContent}\n                onChange={(e) => setCommentContent(e.target.value)}\n                placeholder=\"Enter your comment\"\n                style={{ width: '100%', minHeight: '100px', marginBottom: '10px' }}\n              />\n              <select \n                value={commentType} \n                onChange={(e) => setCommentType(e.target.value)}\n                style={{ width: '100%', marginBottom: '10px' }}\n              >\n                <option value=\"positive\">Positive</option>\n                <option value=\"negative\">Negative</option>\n                <option value=\"suggestion\">Suggestion</option>\n              </select>\n              <input \n                type=\"file\" \n                onChange={(e) => e.target.files && setCommentFile(e.target.files[0])} \n                style={{ marginBottom: '10px' }}\n              />\n              <button \n                onClick={addOrUpdateComment}\n                className=\"comment-button\"\n                style={{ backgroundColor: '#4CAF50', color: 'white', width: '100%' }}\n              >\n                {editingCommentId ? 'Update Comment' : 'Add Comment'}\n              </button>\n              {editingCommentId && (\n                <button \n                  onClick={() => {\n                    setEditingCommentId(null);\n                    setCommentContent('');\n                    setCommentType('positive');\n                    setCommentFile(null);\n                  }}\n                  className=\"comment-button\"\n                  style={{ backgroundColor: '#f44336', color: 'white', width: '100%' }}\n                >\n                  Cancel Edit\n                </button>\n              )}\n              <div>\n                {comments.map(comment => (\n                  <div \n                    key={comment.commentId} \n                    className=\"comment-box\" \n                    data-comment-id={comment.commentId}\n                    style={{\n                      borderLeft: `5px solid ${comment.type === 'negative' ? 'lightcoral' : comment.type === 'positive' ? 'lightgreen' : 'lightyellow'}`\n                    }}\n                  >\n                    <p><strong>Selected text:</strong> {selectedTranscript.content.slice(comment.startIndex, comment.endIndex)}</p>\n                    <p><strong>Comment:</strong> {comment.content}</p>\n                    <p><strong>Type:</strong> {comment.type}</p>\n                    {comment.fileAttachment && <p><strong>Attachment:</strong> <a href={comment.fileAttachment}>View File</a></p>}\n                    <div className=\"comment-buttons\">\n                      <button className=\"comment-button delete-button\" onClick={() => deleteComment(comment.commentId)}>Delete</button>\n                      <button className=\"comment-button edit-button\" onClick={() => {\n                        setEditingCommentId(comment.commentId);\n                        setCommentContent(comment.content);\n                        setCommentType(comment.type);\n                        setSelectedText({\n                          start: comment.startIndex || 0,\n                          end: comment.endIndex || 0,\n                          text: selectedTranscript.content.slice(comment.startIndex, comment.endIndex)\n                        });\n                      }}>Edit</button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {hoveredNote && !pinnedNote && (\n        <FloatingNoteBox\n          content={hoveredNote.content}\n          position={hoveredNote.position}\n        />\n      )}\n      {pinnedNote && (\n        <FloatingNoteBox\n          content={pinnedNote.content}\n          position={pinnedNote.position}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}