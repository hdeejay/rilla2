{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport './App.css';\nimport axios from 'axios';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uploadVideo = async blob => {\n  const formData = new FormData();\n  formData.append('video', blob, 'temp_video.webm');\n  try {\n    const response = await axios.post('http://localhost:8000/upload', formData);\n    console.log('Video uploaded successfully:', response.data);\n  } catch (error) {\n    console.error('Error uploading the video:', error);\n  }\n};\nconst App = () => {\n  _s();\n  const videoRef = useRef(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [chunks, setChunks] = useState([]);\n  const [mediaBlobUrl, setMediaBlobUrl] = useState(null);\n  useEffect(() => {\n    console.log('App component rendered');\n  }, []);\n  const startRecording = () => {\n    if (videoRef.current && videoRef.current.stream) {\n      const options = {\n        mimeType: 'video/webm; codecs=vp8,opus'\n      };\n      const recorder = new MediaRecorder(videoRef.current.stream, options);\n      setMediaRecorder(recorder);\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setChunks(prev => [...prev, event.data]);\n        }\n      };\n      recorder.start();\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunks, {\n          type: 'video/webm'\n        });\n        const url = URL.createObjectURL(blob);\n        setMediaBlobUrl(url);\n        uploadVideo(blob);\n        setChunks([]);\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Recording App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), mediaBlobUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n      src: mediaBlobUrl,\n      controls: true,\n      autoPlay: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"VyM07vfpp1MtQxY/mqJFiIKKayQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Webcam","axios","Dashboard","jsxDEV","_jsxDEV","uploadVideo","blob","formData","FormData","append","response","post","console","log","data","error","App","_s","videoRef","mediaRecorder","setMediaRecorder","chunks","setChunks","mediaBlobUrl","setMediaBlobUrl","startRecording","current","stream","options","mimeType","recorder","MediaRecorder","ondataavailable","event","size","prev","start","stopRecording","stop","onstop","Blob","type","url","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","src","controls","autoPlay","loop","_c","$RefreshReg$"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport './App.css';\nimport axios from 'axios';\nimport Dashboard from './components/Dashboard';\n\nconst uploadVideo = async (blob: Blob) => {\n    const formData = new FormData();\n    formData.append('video', blob, 'temp_video.webm');\n    try {\n        const response = await axios.post('http://localhost:8000/upload', formData);\n        console.log('Video uploaded successfully:', response.data);\n    } catch (error) {\n        console.error('Error uploading the video:', error);\n    }\n};\n\nconst App: React.FC = () => {\n    const videoRef = useRef<Webcam>(null);\n    const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | null>(null);\n    const [chunks, setChunks] = useState<Blob[]>([]);\n    const [mediaBlobUrl, setMediaBlobUrl] = useState<string | null>(null);\n\n    useEffect(() => {\n        console.log('App component rendered');\n    }, []);\n\n    const startRecording = () => {\n        if (videoRef.current && videoRef.current.stream) {\n            const options = { mimeType: 'video/webm; codecs=vp8,opus' };\n            const recorder = new MediaRecorder(videoRef.current.stream, options);\n            setMediaRecorder(recorder);\n            recorder.ondataavailable = (event) => {\n                if (event.data.size > 0) {\n                    setChunks((prev) => [...prev, event.data]);\n                }\n            };\n            recorder.start();\n        }\n    };\n\n    const stopRecording = () => {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            mediaRecorder.onstop = () => {\n                const blob = new Blob(chunks, { type: 'video/webm' });\n                const url = URL.createObjectURL(blob);\n                setMediaBlobUrl(url);\n                uploadVideo(blob);\n                setChunks([]);\n            };\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Video Recording App</h1>\n            <Webcam ref={videoRef} />\n            <button onClick={startRecording}>Start Recording</button>\n            <button onClick={stopRecording}>Stop Recording</button>\n            {mediaBlobUrl && (\n                <video src={mediaBlobUrl} controls autoPlay loop />\n            )}\n            <Dashboard />\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAG,MAAOC,IAAU,IAAK;EACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,IAAI,EAAE,iBAAiB,CAAC;EACjD,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,CAAC;IAC3EK,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,QAAQ,CAACI,IAAI,CAAC;EAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACtD;AACJ,CAAC;AAED,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGrB,MAAM,CAAS,IAAI,CAAC;EACrC,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAuB,IAAI,CAAC;EAC9E,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EAErEC,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIP,QAAQ,CAACQ,OAAO,IAAIR,QAAQ,CAACQ,OAAO,CAACC,MAAM,EAAE;MAC7C,MAAMC,OAAO,GAAG;QAAEC,QAAQ,EAAE;MAA8B,CAAC;MAC3D,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACb,QAAQ,CAACQ,OAAO,CAACC,MAAM,EAAEC,OAAO,CAAC;MACpER,gBAAgB,CAACU,QAAQ,CAAC;MAC1BA,QAAQ,CAACE,eAAe,GAAIC,KAAK,IAAK;QAClC,IAAIA,KAAK,CAACnB,IAAI,CAACoB,IAAI,GAAG,CAAC,EAAE;UACrBZ,SAAS,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,KAAK,CAACnB,IAAI,CAAC,CAAC;QAC9C;MACJ,CAAC;MACDgB,QAAQ,CAACM,KAAK,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIlB,aAAa,EAAE;MACfA,aAAa,CAACmB,IAAI,CAAC,CAAC;MACpBnB,aAAa,CAACoB,MAAM,GAAG,MAAM;QACzB,MAAMjC,IAAI,GAAG,IAAIkC,IAAI,CAACnB,MAAM,EAAE;UAAEoB,IAAI,EAAE;QAAa,CAAC,CAAC;QACrD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACtC,IAAI,CAAC;QACrCkB,eAAe,CAACkB,GAAG,CAAC;QACpBrC,WAAW,CAACC,IAAI,CAAC;QACjBgB,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC;IACL;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB1C,OAAA;MAAA0C,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B9C,OAAA,CAACJ,MAAM;MAACmD,GAAG,EAAEjC;IAAS;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzB9C,OAAA;MAAQgD,OAAO,EAAE3B,cAAe;MAAAqB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzD9C,OAAA;MAAQgD,OAAO,EAAEf,aAAc;MAAAS,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtD3B,YAAY,iBACTnB,OAAA;MAAOiD,GAAG,EAAE9B,YAAa;MAAC+B,QAAQ;MAACC,QAAQ;MAACC,IAAI;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACrD,eACD9C,OAAA,CAACF,SAAS;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAACjC,EAAA,CAjDID,GAAa;AAAAyC,EAAA,GAAbzC,GAAa;AAmDnB,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}