{"ast":null,"code":"import { EndpointCache } from \"@aws-sdk/endpoint-cache\";\nexport const resolveEndpointDiscoveryConfig = (input, _ref) => {\n  let {\n    endpointDiscoveryCommandCtor\n  } = _ref;\n  return {\n    ...input,\n    endpointDiscoveryCommandCtor,\n    endpointCache: new EndpointCache(input.endpointCacheSize ?? 1000),\n    endpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined ? () => Promise.resolve(input.endpointDiscoveryEnabled) : input.endpointDiscoveryEnabledProvider,\n    isClientEndpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined\n  };\n};","map":{"version":3,"names":["EndpointCache","resolveEndpointDiscoveryConfig","input","_ref","endpointDiscoveryCommandCtor","endpointCache","endpointCacheSize","endpointDiscoveryEnabled","undefined","Promise","resolve","endpointDiscoveryEnabledProvider","isClientEndpointDiscoveryEnabled"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/resolveEndpointDiscoveryConfig.js"],"sourcesContent":["import { EndpointCache } from \"@aws-sdk/endpoint-cache\";\nexport const resolveEndpointDiscoveryConfig = (input, { endpointDiscoveryCommandCtor }) => ({\n    ...input,\n    endpointDiscoveryCommandCtor,\n    endpointCache: new EndpointCache(input.endpointCacheSize ?? 1000),\n    endpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined\n        ? () => Promise.resolve(input.endpointDiscoveryEnabled)\n        : input.endpointDiscoveryEnabledProvider,\n    isClientEndpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined,\n});\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,OAAO,MAAMC,8BAA8B,GAAGA,CAACC,KAAK,EAAAC,IAAA;EAAA,IAAE;IAAEC;EAA6B,CAAC,GAAAD,IAAA;EAAA,OAAM;IACxF,GAAGD,KAAK;IACRE,4BAA4B;IAC5BC,aAAa,EAAE,IAAIL,aAAa,CAACE,KAAK,CAACI,iBAAiB,IAAI,IAAI,CAAC;IACjEC,wBAAwB,EAAEL,KAAK,CAACK,wBAAwB,KAAKC,SAAS,GAChE,MAAMC,OAAO,CAACC,OAAO,CAACR,KAAK,CAACK,wBAAwB,CAAC,GACrDL,KAAK,CAACS,gCAAgC;IAC5CC,gCAAgC,EAAEV,KAAK,CAACK,wBAAwB,KAAKC;EACzE,CAAC;AAAA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}