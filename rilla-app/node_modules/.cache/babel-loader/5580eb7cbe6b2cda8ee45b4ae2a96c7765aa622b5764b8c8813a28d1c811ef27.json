{"ast":null,"code":"const makePagedClientRequest = async function (CommandCtor, client, input) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n  return await client.send(new CommandCtor(input), ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n  return async function* paginateOperation(config, input) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    for (var _len2 = arguments.length, additionalArguments = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      additionalArguments[_key2 - 2] = arguments[_key2];\n    }\n    while (hasNext) {\n      input[inputTokenName] = token;\n      if (pageSizeTokenName) {\n        input[pageSizeTokenName] = input[pageSizeTokenName] ?? config.pageSize;\n      }\n      if (config.client instanceof ClientCtor) {\n        page = await makePagedClientRequest(CommandCtor, config.client, input, ...additionalArguments);\n      } else {\n        throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n      }\n      yield page;\n      const prevToken = token;\n      token = get(page, outputTokenName);\n      hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n  };\n}\nconst get = (fromObject, path) => {\n  let cursor = fromObject;\n  const pathComponents = path.split(\".\");\n  for (const step of pathComponents) {\n    if (!cursor || typeof cursor !== \"object\") {\n      return undefined;\n    }\n    cursor = cursor[step];\n  }\n  return cursor;\n};","map":{"version":3,"names":["makePagedClientRequest","CommandCtor","client","input","_len","arguments","length","args","Array","_key","send","createPaginator","ClientCtor","inputTokenName","outputTokenName","pageSizeTokenName","paginateOperation","config","token","startingToken","undefined","hasNext","page","_len2","additionalArguments","_key2","pageSize","Error","name","prevToken","get","stopOnSameToken","fromObject","path","cursor","pathComponents","split","step"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@smithy/core/dist-es/pagination/createPaginator.js"],"sourcesContent":["const makePagedClientRequest = async (CommandCtor, client, input, ...args) => {\n    return await client.send(new CommandCtor(input), ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n    return async function* paginateOperation(config, input, ...additionalArguments) {\n        let token = config.startingToken || undefined;\n        let hasNext = true;\n        let page;\n        while (hasNext) {\n            input[inputTokenName] = token;\n            if (pageSizeTokenName) {\n                input[pageSizeTokenName] = input[pageSizeTokenName] ?? config.pageSize;\n            }\n            if (config.client instanceof ClientCtor) {\n                page = await makePagedClientRequest(CommandCtor, config.client, input, ...additionalArguments);\n            }\n            else {\n                throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n            }\n            yield page;\n            const prevToken = token;\n            token = get(page, outputTokenName);\n            hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n        }\n        return undefined;\n    };\n}\nconst get = (fromObject, path) => {\n    let cursor = fromObject;\n    const pathComponents = path.split(\".\");\n    for (const step of pathComponents) {\n        if (!cursor || typeof cursor !== \"object\") {\n            return undefined;\n        }\n        cursor = cursor[step];\n    }\n    return cursor;\n};\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,eAAAA,CAAOC,WAAW,EAAEC,MAAM,EAAEC,KAAK,EAAc;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EACrE,OAAO,MAAMP,MAAM,CAACQ,IAAI,CAAC,IAAIT,WAAW,CAACE,KAAK,CAAC,EAAE,GAAGI,IAAI,CAAC;AAC7D,CAAC;AACD,OAAO,SAASI,eAAeA,CAACC,UAAU,EAAEX,WAAW,EAAEY,cAAc,EAAEC,eAAe,EAAEC,iBAAiB,EAAE;EACzG,OAAO,gBAAgBC,iBAAiBA,CAACC,MAAM,EAAEd,KAAK,EAA0B;IAC5E,IAAIe,KAAK,GAAGD,MAAM,CAACE,aAAa,IAAIC,SAAS;IAC7C,IAAIC,OAAO,GAAG,IAAI;IAClB,IAAIC,IAAI;IAAC,SAAAC,KAAA,GAAAlB,SAAA,CAAAC,MAAA,EAH8CkB,mBAAmB,OAAAhB,KAAA,CAAAe,KAAA,OAAAA,KAAA,WAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;MAAnBD,mBAAmB,CAAAC,KAAA,QAAApB,SAAA,CAAAoB,KAAA;IAAA;IAI1E,OAAOJ,OAAO,EAAE;MACZlB,KAAK,CAACU,cAAc,CAAC,GAAGK,KAAK;MAC7B,IAAIH,iBAAiB,EAAE;QACnBZ,KAAK,CAACY,iBAAiB,CAAC,GAAGZ,KAAK,CAACY,iBAAiB,CAAC,IAAIE,MAAM,CAACS,QAAQ;MAC1E;MACA,IAAIT,MAAM,CAACf,MAAM,YAAYU,UAAU,EAAE;QACrCU,IAAI,GAAG,MAAMtB,sBAAsB,CAACC,WAAW,EAAEgB,MAAM,CAACf,MAAM,EAAEC,KAAK,EAAE,GAAGqB,mBAAmB,CAAC;MAClG,CAAC,MACI;QACD,MAAM,IAAIG,KAAK,CAAC,wCAAwCf,UAAU,CAACgB,IAAI,EAAE,CAAC;MAC9E;MACA,MAAMN,IAAI;MACV,MAAMO,SAAS,GAAGX,KAAK;MACvBA,KAAK,GAAGY,GAAG,CAACR,IAAI,EAAER,eAAe,CAAC;MAClCO,OAAO,GAAG,CAAC,EAAEH,KAAK,KAAK,CAACD,MAAM,CAACc,eAAe,IAAIb,KAAK,KAAKW,SAAS,CAAC,CAAC;IAC3E;IACA,OAAOT,SAAS;EACpB,CAAC;AACL;AACA,MAAMU,GAAG,GAAGA,CAACE,UAAU,EAAEC,IAAI,KAAK;EAC9B,IAAIC,MAAM,GAAGF,UAAU;EACvB,MAAMG,cAAc,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACtC,KAAK,MAAMC,IAAI,IAAIF,cAAc,EAAE;IAC/B,IAAI,CAACD,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MACvC,OAAOd,SAAS;IACpB;IACAc,MAAM,GAAGA,MAAM,CAACG,IAAI,CAAC;EACzB;EACA,OAAOH,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}