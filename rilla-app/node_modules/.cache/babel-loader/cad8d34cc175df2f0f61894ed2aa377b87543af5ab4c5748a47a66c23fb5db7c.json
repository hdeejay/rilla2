{"ast":null,"code":"export class NumberValue {\n  constructor(value) {\n    if (typeof value === \"object\" && \"N\" in value) {\n      this.value = String(value.N);\n    } else {\n      this.value = String(value);\n    }\n    const valueOf = typeof value.valueOf() === \"number\" ? value.valueOf() : 0;\n    const imprecise = valueOf > Number.MAX_SAFE_INTEGER || valueOf < Number.MIN_SAFE_INTEGER || Math.abs(valueOf) === Infinity || Number.isNaN(valueOf);\n    if (imprecise) {\n      throw new Error(`NumberValue should not be initialized with an imprecise number=${valueOf}. Use a string instead.`);\n    }\n  }\n  static from(value) {\n    return new NumberValue(value);\n  }\n  toAttributeValue() {\n    return {\n      N: this.toString()\n    };\n  }\n  toBigInt() {\n    const stringValue = this.toString();\n    return BigInt(stringValue);\n  }\n  toString() {\n    return String(this.value);\n  }\n  valueOf() {\n    return this.toString();\n  }\n}","map":{"version":3,"names":["NumberValue","constructor","value","String","N","valueOf","imprecise","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Math","abs","Infinity","isNaN","Error","from","toAttributeValue","toString","toBigInt","stringValue","BigInt"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@aws-sdk/util-dynamodb/dist-es/NumberValue.js"],"sourcesContent":["export class NumberValue {\n    constructor(value) {\n        if (typeof value === \"object\" && \"N\" in value) {\n            this.value = String(value.N);\n        }\n        else {\n            this.value = String(value);\n        }\n        const valueOf = typeof value.valueOf() === \"number\" ? value.valueOf() : 0;\n        const imprecise = valueOf > Number.MAX_SAFE_INTEGER ||\n            valueOf < Number.MIN_SAFE_INTEGER ||\n            Math.abs(valueOf) === Infinity ||\n            Number.isNaN(valueOf);\n        if (imprecise) {\n            throw new Error(`NumberValue should not be initialized with an imprecise number=${valueOf}. Use a string instead.`);\n        }\n    }\n    static from(value) {\n        return new NumberValue(value);\n    }\n    toAttributeValue() {\n        return {\n            N: this.toString(),\n        };\n    }\n    toBigInt() {\n        const stringValue = this.toString();\n        return BigInt(stringValue);\n    }\n    toString() {\n        return String(this.value);\n    }\n    valueOf() {\n        return this.toString();\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,CAAC;EACrBC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,GAAG,IAAIA,KAAK,EAAE;MAC3C,IAAI,CAACA,KAAK,GAAGC,MAAM,CAACD,KAAK,CAACE,CAAC,CAAC;IAChC,CAAC,MACI;MACD,IAAI,CAACF,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC;IAC9B;IACA,MAAMG,OAAO,GAAG,OAAOH,KAAK,CAACG,OAAO,CAAC,CAAC,KAAK,QAAQ,GAAGH,KAAK,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC;IACzE,MAAMC,SAAS,GAAGD,OAAO,GAAGE,MAAM,CAACC,gBAAgB,IAC/CH,OAAO,GAAGE,MAAM,CAACE,gBAAgB,IACjCC,IAAI,CAACC,GAAG,CAACN,OAAO,CAAC,KAAKO,QAAQ,IAC9BL,MAAM,CAACM,KAAK,CAACR,OAAO,CAAC;IACzB,IAAIC,SAAS,EAAE;MACX,MAAM,IAAIQ,KAAK,CAAC,kEAAkET,OAAO,yBAAyB,CAAC;IACvH;EACJ;EACA,OAAOU,IAAIA,CAACb,KAAK,EAAE;IACf,OAAO,IAAIF,WAAW,CAACE,KAAK,CAAC;EACjC;EACAc,gBAAgBA,CAAA,EAAG;IACf,OAAO;MACHZ,CAAC,EAAE,IAAI,CAACa,QAAQ,CAAC;IACrB,CAAC;EACL;EACAC,QAAQA,CAAA,EAAG;IACP,MAAMC,WAAW,GAAG,IAAI,CAACF,QAAQ,CAAC,CAAC;IACnC,OAAOG,MAAM,CAACD,WAAW,CAAC;EAC9B;EACAF,QAAQA,CAAA,EAAG;IACP,OAAOd,MAAM,CAAC,IAAI,CAACD,KAAK,CAAC;EAC7B;EACAG,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACY,QAAQ,CAAC,CAAC;EAC1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}