{"ast":null,"code":"export const getCacheKey = async (commandName, config, options) => {\n  const {\n    accessKeyId\n  } = await config.credentials();\n  const {\n    identifiers\n  } = options;\n  return JSON.stringify({\n    ...(accessKeyId && {\n      accessKeyId\n    }),\n    ...(identifiers && {\n      commandName,\n      identifiers: Object.entries(identifiers).sort().reduce((acc, _ref) => {\n        let [key, value] = _ref;\n        return {\n          ...acc,\n          [key]: value\n        };\n      }, {})\n    })\n  });\n};","map":{"version":3,"names":["getCacheKey","commandName","config","options","accessKeyId","credentials","identifiers","JSON","stringify","Object","entries","sort","reduce","acc","_ref","key","value"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/getCacheKey.js"],"sourcesContent":["export const getCacheKey = async (commandName, config, options) => {\n    const { accessKeyId } = await config.credentials();\n    const { identifiers } = options;\n    return JSON.stringify({\n        ...(accessKeyId && { accessKeyId }),\n        ...(identifiers && {\n            commandName,\n            identifiers: Object.entries(identifiers)\n                .sort()\n                .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {}),\n        }),\n    });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,WAAW,EAAEC,MAAM,EAAEC,OAAO,KAAK;EAC/D,MAAM;IAAEC;EAAY,CAAC,GAAG,MAAMF,MAAM,CAACG,WAAW,CAAC,CAAC;EAClD,MAAM;IAAEC;EAAY,CAAC,GAAGH,OAAO;EAC/B,OAAOI,IAAI,CAACC,SAAS,CAAC;IAClB,IAAIJ,WAAW,IAAI;MAAEA;IAAY,CAAC,CAAC;IACnC,IAAIE,WAAW,IAAI;MACfL,WAAW;MACXK,WAAW,EAAEG,MAAM,CAACC,OAAO,CAACJ,WAAW,CAAC,CACnCK,IAAI,CAAC,CAAC,CACNC,MAAM,CAAC,CAACC,GAAG,EAAAC,IAAA;QAAA,IAAE,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAAF,IAAA;QAAA,OAAM;UAAE,GAAGD,GAAG;UAAE,CAACE,GAAG,GAAGC;QAAM,CAAC;MAAA,CAAC,EAAE,CAAC,CAAC;IACrE,CAAC;EACL,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}