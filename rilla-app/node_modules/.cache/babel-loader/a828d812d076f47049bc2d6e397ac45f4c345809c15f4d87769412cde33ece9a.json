{"ast":null,"code":"import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  const defaultsMode = resolveDefaultsModeConfig(config);\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return {\n    ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider: config?.credentialDefaultProvider ?? (_ => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider: config?.defaultUserAgentProvider ?? defaultUserAgent({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    endpointDiscoveryEnabledProvider: config?.endpointDiscoveryEnabledProvider ?? (() => Promise.resolve(undefined)),\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n    retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n    useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))\n  };\n};","map":{"version":3,"names":["packageInfo","Sha256","defaultUserAgent","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","FetchHttpHandler","RequestHandler","streamCollector","invalidProvider","calculateBodyLength","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","getRuntimeConfig","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","config","defaultsMode","defaultConfigProvider","then","clientSharedValues","runtime","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","endpointDiscoveryEnabledProvider","resolve","undefined","maxAttempts","region","requestHandler","create","retryMode","sha256","useDualstackEndpoint","useFipsEndpoint"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@aws-sdk/client-dynamodb/dist-es/runtimeConfig.browser.js"],"sourcesContent":["import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        endpointDiscoveryEnabledProvider: config?.endpointDiscoveryEnabledProvider ?? (() => Promise.resolve(undefined)),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,iBAAiB;AACzC,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,8BAA8B,EAAEC,yBAAyB,QAAQ,yBAAyB;AACnG,SAASC,gBAAgB,IAAIC,cAAc,EAAEC,eAAe,QAAQ,4BAA4B;AAChG,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC7E,SAASC,gBAAgB,IAAIC,sBAAsB,QAAQ,wBAAwB;AACnF,SAASC,yBAAyB,QAAQ,uBAAuB;AACjE,SAASC,yBAAyB,QAAQ,oCAAoC;AAC9E,OAAO,MAAMH,gBAAgB,GAAII,MAAM,IAAK;EACxC,MAAMC,YAAY,GAAGF,yBAAyB,CAACC,MAAM,CAAC;EACtD,MAAME,qBAAqB,GAAGA,CAAA,KAAMD,YAAY,CAAC,CAAC,CAACE,IAAI,CAACL,yBAAyB,CAAC;EAClF,MAAMM,kBAAkB,GAAGP,sBAAsB,CAACG,MAAM,CAAC;EACzD,OAAO;IACH,GAAGI,kBAAkB;IACrB,GAAGJ,MAAM;IACTK,OAAO,EAAE,SAAS;IAClBJ,YAAY;IACZK,iBAAiB,EAAEN,MAAM,EAAEM,iBAAiB,IAAIb,mBAAmB;IACnEc,yBAAyB,EAAEP,MAAM,EAAEO,yBAAyB,KAAMC,CAAC,IAAK,MAAMC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACjIC,wBAAwB,EAAEZ,MAAM,EAAEY,wBAAwB,IACtD1B,gBAAgB,CAAC;MAAE2B,SAAS,EAAET,kBAAkB,CAACS,SAAS;MAAEC,aAAa,EAAE9B,WAAW,CAAC+B;IAAQ,CAAC,CAAC;IACrGC,gCAAgC,EAAEhB,MAAM,EAAEgB,gCAAgC,KAAK,MAAMP,OAAO,CAACQ,OAAO,CAACC,SAAS,CAAC,CAAC;IAChHC,WAAW,EAAEnB,MAAM,EAAEmB,WAAW,IAAIzB,oBAAoB;IACxD0B,MAAM,EAAEpB,MAAM,EAAEoB,MAAM,IAAI5B,eAAe,CAAC,mBAAmB,CAAC;IAC9D6B,cAAc,EAAE/B,cAAc,CAACgC,MAAM,CAACtB,MAAM,EAAEqB,cAAc,IAAInB,qBAAqB,CAAC;IACtFqB,SAAS,EAAEvB,MAAM,EAAEuB,SAAS,KAAK,YAAY,CAAC,MAAMrB,qBAAqB,CAAC,CAAC,EAAEqB,SAAS,IAAI5B,kBAAkB,CAAC;IAC7G6B,MAAM,EAAExB,MAAM,EAAEwB,MAAM,IAAIvC,MAAM;IAChCM,eAAe,EAAES,MAAM,EAAET,eAAe,IAAIA,eAAe;IAC3DkC,oBAAoB,EAAEzB,MAAM,EAAEyB,oBAAoB,KAAK,MAAMhB,OAAO,CAACQ,OAAO,CAAC9B,8BAA8B,CAAC,CAAC;IAC7GuC,eAAe,EAAE1B,MAAM,EAAE0B,eAAe,KAAK,MAAMjB,OAAO,CAACQ,OAAO,CAAC7B,yBAAyB,CAAC;EACjG,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}