{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const handleStartCaptureClick = React.useCallback(() => {\n    if (webcamRef.current && webcamRef.current.stream) {\n      setRecording(true);\n      mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n        mimeType: 'video/webm'\n      });\n      mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n      mediaRecorderRef.current.start();\n    }\n  }, [webcamRef, handleDataAvailable]);\n  const handleDataAvailable = React.useCallback(({\n    data\n  }) => {\n    if (data.size > 0) {\n      setRecordedChunks(prev => prev.concat(data));\n    }\n  }, []);\n  const handleStopCaptureClick = React.useCallback(() => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  }, []);\n  const handleUpload = React.useCallback(async () => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: 'video/webm'\n      });\n      const formData = new FormData();\n      formData.append('video', blob, 'recorded_video.webm');\n      try {\n        const response = await axios.post('http://localhost:8000/upload', formData);\n        console.log('Video uploaded successfully:', response.data);\n        setRecordedChunks([]);\n      } catch (error) {\n        console.error('Error uploading video:', error);\n      }\n    }\n  }, [recordedChunks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Recording App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: true,\n      video: true,\n      ref: webcamRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStopCaptureClick,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartCaptureClick,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), recordedChunks.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"my2CKuMGHXi+X+O5YZq+bl+HMLM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","Webcam","axios","Dashboard","jsxDEV","_jsxDEV","App","_s","webcamRef","recording","setRecording","mediaRecorderRef","recordedChunks","setRecordedChunks","handleStartCaptureClick","useCallback","current","stream","MediaRecorder","mimeType","addEventListener","handleDataAvailable","start","data","size","prev","concat","handleStopCaptureClick","stop","handleUpload","length","blob","Blob","type","formData","FormData","append","response","post","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","video","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\n\nconst App: React.FC = () => {\n  const webcamRef = useRef<Webcam>(null);\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const [recordedChunks, setRecordedChunks] = useState<Blob[]>([]);\n\n  const handleStartCaptureClick = React.useCallback(() => {\n    if (webcamRef.current && webcamRef.current.stream) {\n      setRecording(true);\n      mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, { mimeType: 'video/webm' });\n      mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n      mediaRecorderRef.current.start();\n    }\n  }, [webcamRef, handleDataAvailable]);\n\n  const handleDataAvailable = React.useCallback(({ data }: BlobEvent) => {\n    if (data.size > 0) {\n      setRecordedChunks((prev) => prev.concat(data));\n    }\n  }, []);\n\n  const handleStopCaptureClick = React.useCallback(() => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  }, []);\n\n  const handleUpload = React.useCallback(async () => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, { type: 'video/webm' });\n      const formData = new FormData();\n      formData.append('video', blob, 'recorded_video.webm');\n      \n      try {\n        const response = await axios.post('http://localhost:8000/upload', formData);\n        console.log('Video uploaded successfully:', response.data);\n        setRecordedChunks([]);\n      } catch (error) {\n        console.error('Error uploading video:', error);\n      }\n    }\n  }, [recordedChunks]);\n\n  return (\n    <div className=\"App\">\n      <h1>Video Recording App</h1>\n      <Webcam audio={true} video={true} ref={webcamRef} />\n      <div>\n        {recording ? (\n          <button onClick={handleStopCaptureClick}>Stop Recording</button>\n        ) : (\n          <button onClick={handleStartCaptureClick}>Start Recording</button>\n        )}\n        {recordedChunks.length > 0 && (\n          <button onClick={handleUpload}>Upload</button>\n        )}\n      </div>\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}