{"ast":null,"code":"import { endpointDiscoveryMiddleware } from \"./endpointDiscoveryMiddleware\";\nexport const endpointDiscoveryMiddlewareOptions = {\n  name: \"endpointDiscoveryMiddleware\",\n  step: \"build\",\n  tags: [\"ENDPOINT_DISCOVERY\"],\n  override: true\n};\nexport const getEndpointDiscoveryPlugin = (pluginConfig, middlewareConfig) => ({\n  applyToStack: commandStack => {\n    commandStack.add(endpointDiscoveryMiddleware(pluginConfig, middlewareConfig), endpointDiscoveryMiddlewareOptions);\n  }\n});\nexport const getEndpointDiscoveryRequiredPlugin = (pluginConfig, middlewareConfig) => ({\n  applyToStack: commandStack => {\n    commandStack.add(endpointDiscoveryMiddleware(pluginConfig, {\n      ...middlewareConfig,\n      isDiscoveredEndpointRequired: true\n    }), endpointDiscoveryMiddlewareOptions);\n  }\n});\nexport const getEndpointDiscoveryOptionalPlugin = (pluginConfig, middlewareConfig) => ({\n  applyToStack: commandStack => {\n    commandStack.add(endpointDiscoveryMiddleware(pluginConfig, {\n      ...middlewareConfig,\n      isDiscoveredEndpointRequired: false\n    }), endpointDiscoveryMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["endpointDiscoveryMiddleware","endpointDiscoveryMiddlewareOptions","name","step","tags","override","getEndpointDiscoveryPlugin","pluginConfig","middlewareConfig","applyToStack","commandStack","add","getEndpointDiscoveryRequiredPlugin","isDiscoveredEndpointRequired","getEndpointDiscoveryOptionalPlugin"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/getEndpointDiscoveryPlugin.js"],"sourcesContent":["import { endpointDiscoveryMiddleware } from \"./endpointDiscoveryMiddleware\";\nexport const endpointDiscoveryMiddlewareOptions = {\n    name: \"endpointDiscoveryMiddleware\",\n    step: \"build\",\n    tags: [\"ENDPOINT_DISCOVERY\"],\n    override: true,\n};\nexport const getEndpointDiscoveryPlugin = (pluginConfig, middlewareConfig) => ({\n    applyToStack: (commandStack) => {\n        commandStack.add(endpointDiscoveryMiddleware(pluginConfig, middlewareConfig), endpointDiscoveryMiddlewareOptions);\n    },\n});\nexport const getEndpointDiscoveryRequiredPlugin = (pluginConfig, middlewareConfig) => ({\n    applyToStack: (commandStack) => {\n        commandStack.add(endpointDiscoveryMiddleware(pluginConfig, { ...middlewareConfig, isDiscoveredEndpointRequired: true }), endpointDiscoveryMiddlewareOptions);\n    },\n});\nexport const getEndpointDiscoveryOptionalPlugin = (pluginConfig, middlewareConfig) => ({\n    applyToStack: (commandStack) => {\n        commandStack.add(endpointDiscoveryMiddleware(pluginConfig, { ...middlewareConfig, isDiscoveredEndpointRequired: false }), endpointDiscoveryMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,2BAA2B,QAAQ,+BAA+B;AAC3E,OAAO,MAAMC,kCAAkC,GAAG;EAC9CC,IAAI,EAAE,6BAA6B;EACnCC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,CAAC,oBAAoB,CAAC;EAC5BC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,0BAA0B,GAAGA,CAACC,YAAY,EAAEC,gBAAgB,MAAM;EAC3EC,YAAY,EAAGC,YAAY,IAAK;IAC5BA,YAAY,CAACC,GAAG,CAACX,2BAA2B,CAACO,YAAY,EAAEC,gBAAgB,CAAC,EAAEP,kCAAkC,CAAC;EACrH;AACJ,CAAC,CAAC;AACF,OAAO,MAAMW,kCAAkC,GAAGA,CAACL,YAAY,EAAEC,gBAAgB,MAAM;EACnFC,YAAY,EAAGC,YAAY,IAAK;IAC5BA,YAAY,CAACC,GAAG,CAACX,2BAA2B,CAACO,YAAY,EAAE;MAAE,GAAGC,gBAAgB;MAAEK,4BAA4B,EAAE;IAAK,CAAC,CAAC,EAAEZ,kCAAkC,CAAC;EAChK;AACJ,CAAC,CAAC;AACF,OAAO,MAAMa,kCAAkC,GAAGA,CAACP,YAAY,EAAEC,gBAAgB,MAAM;EACnFC,YAAY,EAAGC,YAAY,IAAK;IAC5BA,YAAY,CAACC,GAAG,CAACX,2BAA2B,CAACO,YAAY,EAAE;MAAE,GAAGC,gBAAgB;MAAEK,4BAA4B,EAAE;IAAM,CAAC,CAAC,EAAEZ,kCAAkC,CAAC;EACjK;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}