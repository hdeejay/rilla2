{"ast":null,"code":"import { TransactWriteItemsCommand as __TransactWriteItemsCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class TransactWriteCommand extends DynamoDBDocumentClientCommand {\n  constructor(input) {\n    super();\n    this.input = input;\n    this.inputKeyNodes = {\n      TransactItems: {\n        \"*\": {\n          ConditionCheck: {\n            Key: ALL_VALUES,\n            ExpressionAttributeValues: ALL_VALUES\n          },\n          Put: {\n            Item: ALL_VALUES,\n            ExpressionAttributeValues: ALL_VALUES\n          },\n          Delete: {\n            Key: ALL_VALUES,\n            ExpressionAttributeValues: ALL_VALUES\n          },\n          Update: {\n            Key: ALL_VALUES,\n            ExpressionAttributeValues: ALL_VALUES\n          }\n        }\n      }\n    };\n    this.outputKeyNodes = {\n      ItemCollectionMetrics: {\n        \"*\": {\n          \"*\": {\n            ItemCollectionKey: ALL_VALUES\n          }\n        }\n      }\n    };\n    this.clientCommand = new __TransactWriteItemsCommand(this.input);\n    this.middlewareStack = this.clientCommand.middlewareStack;\n  }\n  resolveMiddleware(clientStack, configuration, options) {\n    this.addMarshallingMiddleware(configuration);\n    const stack = clientStack.concat(this.middlewareStack);\n    const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n    return async () => handler(this.clientCommand);\n  }\n}","map":{"version":3,"names":["TransactWriteItemsCommand","__TransactWriteItemsCommand","Command","$Command","DynamoDBDocumentClientCommand","ALL_VALUES","TransactWriteCommand","constructor","input","inputKeyNodes","TransactItems","ConditionCheck","Key","ExpressionAttributeValues","Put","Item","Delete","Update","outputKeyNodes","ItemCollectionMetrics","ItemCollectionKey","clientCommand","middlewareStack","resolveMiddleware","clientStack","configuration","options","addMarshallingMiddleware","stack","concat","handler"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@aws-sdk/lib-dynamodb/dist-es/commands/TransactWriteCommand.js"],"sourcesContent":["import { TransactWriteItemsCommand as __TransactWriteItemsCommand } from \"@aws-sdk/client-dynamodb\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { DynamoDBDocumentClientCommand } from \"../baseCommand/DynamoDBDocumentClientCommand\";\nimport { ALL_VALUES } from \"../commands/utils\";\nexport { DynamoDBDocumentClientCommand, $Command };\nexport class TransactWriteCommand extends DynamoDBDocumentClientCommand {\n    constructor(input) {\n        super();\n        this.input = input;\n        this.inputKeyNodes = {\n            TransactItems: {\n                \"*\": {\n                    ConditionCheck: {\n                        Key: ALL_VALUES,\n                        ExpressionAttributeValues: ALL_VALUES,\n                    },\n                    Put: {\n                        Item: ALL_VALUES,\n                        ExpressionAttributeValues: ALL_VALUES,\n                    },\n                    Delete: {\n                        Key: ALL_VALUES,\n                        ExpressionAttributeValues: ALL_VALUES,\n                    },\n                    Update: {\n                        Key: ALL_VALUES,\n                        ExpressionAttributeValues: ALL_VALUES,\n                    },\n                },\n            },\n        };\n        this.outputKeyNodes = {\n            ItemCollectionMetrics: {\n                \"*\": {\n                    \"*\": {\n                        ItemCollectionKey: ALL_VALUES,\n                    },\n                },\n            },\n        };\n        this.clientCommand = new __TransactWriteItemsCommand(this.input);\n        this.middlewareStack = this.clientCommand.middlewareStack;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.addMarshallingMiddleware(configuration);\n        const stack = clientStack.concat(this.middlewareStack);\n        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);\n        return async () => handler(this.clientCommand);\n    }\n}\n"],"mappings":"AAAA,SAASA,yBAAyB,IAAIC,2BAA2B,QAAQ,0BAA0B;AACnG,SAASC,OAAO,IAAIC,QAAQ,QAAQ,uBAAuB;AAC3D,SAASC,6BAA6B,QAAQ,8CAA8C;AAC5F,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASD,6BAA6B,EAAED,QAAQ;AAChD,OAAO,MAAMG,oBAAoB,SAASF,6BAA6B,CAAC;EACpEG,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,aAAa,GAAG;MACjBC,aAAa,EAAE;QACX,GAAG,EAAE;UACDC,cAAc,EAAE;YACZC,GAAG,EAAEP,UAAU;YACfQ,yBAAyB,EAAER;UAC/B,CAAC;UACDS,GAAG,EAAE;YACDC,IAAI,EAAEV,UAAU;YAChBQ,yBAAyB,EAAER;UAC/B,CAAC;UACDW,MAAM,EAAE;YACJJ,GAAG,EAAEP,UAAU;YACfQ,yBAAyB,EAAER;UAC/B,CAAC;UACDY,MAAM,EAAE;YACJL,GAAG,EAAEP,UAAU;YACfQ,yBAAyB,EAAER;UAC/B;QACJ;MACJ;IACJ,CAAC;IACD,IAAI,CAACa,cAAc,GAAG;MAClBC,qBAAqB,EAAE;QACnB,GAAG,EAAE;UACD,GAAG,EAAE;YACDC,iBAAiB,EAAEf;UACvB;QACJ;MACJ;IACJ,CAAC;IACD,IAAI,CAACgB,aAAa,GAAG,IAAIpB,2BAA2B,CAAC,IAAI,CAACO,KAAK,CAAC;IAChE,IAAI,CAACc,eAAe,GAAG,IAAI,CAACD,aAAa,CAACC,eAAe;EAC7D;EACAC,iBAAiBA,CAACC,WAAW,EAAEC,aAAa,EAAEC,OAAO,EAAE;IACnD,IAAI,CAACC,wBAAwB,CAACF,aAAa,CAAC;IAC5C,MAAMG,KAAK,GAAGJ,WAAW,CAACK,MAAM,CAAC,IAAI,CAACP,eAAe,CAAC;IACtD,MAAMQ,OAAO,GAAG,IAAI,CAACT,aAAa,CAACE,iBAAiB,CAACK,KAAK,EAAEH,aAAa,EAAEC,OAAO,CAAC;IACnF,OAAO,YAAYI,OAAO,CAAC,IAAI,CAACT,aAAa,CAAC;EAClD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}