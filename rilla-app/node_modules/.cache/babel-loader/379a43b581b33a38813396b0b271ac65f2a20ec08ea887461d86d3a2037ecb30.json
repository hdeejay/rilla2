{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const handleStartCaptureClick = React.useCallback(() => {\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: \"video/webm\"\n    });\n    mediaRecorderRef.current.addEventListener(\"dataavailable\", handleDataAvailable);\n    mediaRecorderRef.current.start();\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\n  const handleDataAvailable = React.useCallback(({\n    data\n  }) => {\n    if (data.size > 0) {\n      setRecordedChunks(prev => prev.concat(data));\n    }\n  }, [setRecordedChunks]);\n  const handleStopCaptureClick = React.useCallback(() => {\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n  }, [mediaRecorderRef, setCapturing]);\n  const handleUpload = React.useCallback(() => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: \"video/webm\"\n      });\n      const formData = new FormData();\n      formData.append('video', blob, 'recorded_video.webm');\n      axios.post('http://localhost:8000/upload', formData).then(response => {\n        console.log('Video uploaded successfully:', response.data);\n        setRecordedChunks([]);\n      }).catch(error => {\n        console.error('Error uploading video:', error);\n      });\n    }\n  }, [recordedChunks]);\n  useEffect(() => {\n    if (recordedChunks.length > 0 && !capturing) {\n      handleUpload();\n    }\n  }, [recordedChunks, capturing, handleUpload]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Recording App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: true,\n      ref: webcamRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), capturing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopCaptureClick,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartCaptureClick,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LixXeCQtSkg4j9dKysEzeqTKJhc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Webcam","axios","Dashboard","jsxDEV","_jsxDEV","App","_s","webcamRef","mediaRecorderRef","capturing","setCapturing","recordedChunks","setRecordedChunks","handleStartCaptureClick","useCallback","current","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","start","data","size","prev","concat","handleStopCaptureClick","stop","handleUpload","length","blob","Blob","type","formData","FormData","append","post","then","response","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\n\nconst App: React.FC = () => {\n  const webcamRef = useRef<Webcam>(null);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState<Blob[]>([]);\n\n  const handleStartCaptureClick = React.useCallback(() => {\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current!.stream as MediaStream, {\n      mimeType: \"video/webm\"\n    });\n    mediaRecorderRef.current.addEventListener(\n      \"dataavailable\",\n      handleDataAvailable\n    );\n    mediaRecorderRef.current.start();\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\n\n  const handleDataAvailable = React.useCallback(\n    ({ data }: BlobEvent) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data));\n      }\n    },\n    [setRecordedChunks]\n  );\n\n  const handleStopCaptureClick = React.useCallback(() => {\n    mediaRecorderRef.current!.stop();\n    setCapturing(false);\n  }, [mediaRecorderRef, setCapturing]);\n\n  const handleUpload = React.useCallback(() => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: \"video/webm\"\n      });\n      const formData = new FormData();\n      formData.append('video', blob, 'recorded_video.webm');\n      \n      axios.post('http://localhost:8000/upload', formData)\n        .then(response => {\n          console.log('Video uploaded successfully:', response.data);\n          setRecordedChunks([]);\n        })\n        .catch(error => {\n          console.error('Error uploading video:', error);\n        });\n    }\n  }, [recordedChunks]);\n\n  useEffect(() => {\n    if (recordedChunks.length > 0 && !capturing) {\n      handleUpload();\n    }\n  }, [recordedChunks, capturing, handleUpload]);\n\n  return (\n    <div className=\"App\">\n      <h1>Video Recording App</h1>\n      <Webcam audio={true} ref={webcamRef} />\n      {capturing ? (\n        <button onClick={handleStopCaptureClick}>Stop Recording</button>\n      ) : (\n        <button onClick={handleStartCaptureClick}>Start Recording</button>\n      )}\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}