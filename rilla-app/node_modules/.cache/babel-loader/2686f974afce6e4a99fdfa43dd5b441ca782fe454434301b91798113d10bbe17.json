{"ast":null,"code":"import { SignatureV4S3Express } from \"@aws-sdk/middleware-sdk-s3\";\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\nexport class SignatureV4MultiRegion {\n  constructor(options) {\n    this.sigv4Signer = new SignatureV4S3Express(options);\n    this.signerOptions = options;\n  }\n  async sign(requestToSign) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().sign(requestToSign, options);\n    }\n    return this.sigv4Signer.sign(requestToSign, options);\n  }\n  async signWithCredentials(requestToSign, credentials) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().signWithCredentials(requestToSign, credentials, options);\n    }\n    return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\n  }\n  async presign(originalRequest) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (options.signingRegion === \"*\") {\n      if (this.signerOptions.runtime !== \"node\") throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n      return this.getSigv4aSigner().presign(originalRequest, options);\n    }\n    return this.sigv4Signer.presign(originalRequest, options);\n  }\n  async presignWithCredentials(originalRequest, credentials) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (options.signingRegion === \"*\") {\n      throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\n    }\n    return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\n  }\n  getSigv4aSigner() {\n    if (!this.sigv4aSigner) {\n      let CrtSignerV4 = null;\n      try {\n        CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n        if (typeof CrtSignerV4 !== \"function\") throw new Error();\n      } catch (e) {\n        e.message = `${e.message}\\n` + `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` + `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` + `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. \\n` + \"For more information please go to \" + \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n        throw e;\n      }\n      this.sigv4aSigner = new CrtSignerV4({\n        ...this.signerOptions,\n        signingAlgorithm: 1\n      });\n    }\n    return this.sigv4aSigner;\n  }\n}","map":{"version":3,"names":["SignatureV4S3Express","signatureV4CrtContainer","SignatureV4MultiRegion","constructor","options","sigv4Signer","signerOptions","sign","requestToSign","arguments","length","undefined","signingRegion","runtime","Error","getSigv4aSigner","signWithCredentials","credentials","presign","originalRequest","presignWithCredentials","sigv4aSigner","CrtSignerV4","e","message","signingAlgorithm"],"sources":["/Users/hamzahdeejay/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js"],"sourcesContent":["import { SignatureV4S3Express } from \"@aws-sdk/middleware-sdk-s3\";\nimport { signatureV4CrtContainer } from \"./signature-v4-crt-container\";\nexport class SignatureV4MultiRegion {\n    constructor(options) {\n        this.sigv4Signer = new SignatureV4S3Express(options);\n        this.signerOptions = options;\n    }\n    async sign(requestToSign, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().sign(requestToSign, options);\n        }\n        return this.sigv4Signer.sign(requestToSign, options);\n    }\n    async signWithCredentials(requestToSign, credentials, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().signWithCredentials(requestToSign, credentials, options);\n        }\n        return this.sigv4Signer.signWithCredentials(requestToSign, credentials, options);\n    }\n    async presign(originalRequest, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().presign(originalRequest, options);\n        }\n        return this.sigv4Signer.presign(originalRequest, options);\n    }\n    async presignWithCredentials(originalRequest, credentials, options = {}) {\n        if (options.signingRegion === \"*\") {\n            throw new Error(\"Method presignWithCredentials is not supported for [signingRegion=*].\");\n        }\n        return this.sigv4Signer.presignWithCredentials(originalRequest, credentials, options);\n    }\n    getSigv4aSigner() {\n        if (!this.sigv4aSigner) {\n            let CrtSignerV4 = null;\n            try {\n                CrtSignerV4 = signatureV4CrtContainer.CrtSignerV4;\n                if (typeof CrtSignerV4 !== \"function\")\n                    throw new Error();\n            }\n            catch (e) {\n                e.message =\n                    `${e.message}\\n` +\n                        `Please check whether you have installed the \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` +\n                        `You must also register the package by calling [require(\"@aws-sdk/signature-v4-crt\");] ` +\n                        `or an ESM equivalent such as [import \"@aws-sdk/signature-v4-crt\";]. \\n` +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n                throw e;\n            }\n            this.sigv4aSigner = new CrtSignerV4({\n                ...this.signerOptions,\n                signingAlgorithm: 1,\n            });\n        }\n        return this.sigv4aSigner;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}