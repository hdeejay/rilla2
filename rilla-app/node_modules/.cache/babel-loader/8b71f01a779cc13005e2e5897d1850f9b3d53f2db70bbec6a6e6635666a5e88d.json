{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [audioRecording, setAudioRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const handleDataAvailable = useCallback(({\n    data\n  }) => {\n    if (data.size > 0) {\n      setRecordedChunks(prev => prev.concat(data));\n    }\n  }, []);\n  const handleStartCaptureClick = useCallback(() => {\n    if (webcamRef.current && webcamRef.current.stream) {\n      setRecording(true);\n      mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n        mimeType: 'video/webm'\n      });\n      mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n      mediaRecorderRef.current.start();\n    }\n  }, [handleDataAvailable]);\n  const handleStopCaptureClick = useCallback(() => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  }, []);\n  const handleUpload = useCallback(async () => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: 'video/webm'\n      });\n      const formData = new FormData();\n      formData.append('video', blob, 'recorded_video.webm');\n      try {\n        const response = await axios.post('http://localhost:8000/upload', formData);\n        console.log('Video uploaded successfully:', response.data);\n        setRecordedChunks([]);\n      } catch (error) {\n        console.error('Error uploading video:', error);\n      }\n    }\n  }, [recordedChunks]);\n  const handleStartAudioRecording = useCallback(() => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.start();\n      setAudioRecording(true);\n      const audioChunks = [];\n      mediaRecorderRef.current.addEventListener(\"dataavailable\", event => {\n        audioChunks.push(event.data);\n      });\n      mediaRecorderRef.current.addEventListener(\"stop\", () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        setAudioBlob(audioBlob);\n      });\n    });\n  }, []);\n  const handleStopAudioRecording = useCallback(() => {\n    return new Promise(resolve => {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        setAudioRecording(false);\n        mediaRecorderRef.current.addEventListener(\"stop\", () => {\n          if (audioBlob) {\n            resolve(audioBlob);\n          } else {\n            resolve(undefined);\n          }\n        });\n      } else {\n        resolve(undefined);\n      }\n    });\n  }, [audioBlob]);\n  const handleAudioUpload = useCallback(async () => {\n    if (audioBlob) {\n      const formData = new FormData();\n      formData.append('audio', audioBlob, 'recorded_audio.wav');\n      try {\n        const response = await axios.post('http://localhost:8000/upload-audio', formData);\n        console.log('Audio uploaded and transcribed successfully:', response.data);\n        setAudioBlob(null);\n      } catch (error) {\n        console.error('Error uploading and transcribing audio:', error);\n      }\n    }\n  }, [audioBlob]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Video Recording App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: true,\n      videoConstraints: {\n        width: 1280,\n        height: 720,\n        facingMode: \"user\"\n      },\n      ref: webcamRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStopCaptureClick,\n        children: \"Stop Video Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartCaptureClick,\n        children: \"Start Video Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), recordedChunks.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [audioRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStopAudioRecording,\n        children: \"Stop Audio Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartAudioRecording,\n        children: \"Start Audio Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAudioUpload,\n        children: \"Upload Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      onAudioRecordingStart: handleStartAudioRecording,\n      onAudioRecordingStop: handleStopAudioRecording\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TjdvebLVA739ctZAb3ZIU7you18=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useCallback","Webcam","axios","Dashboard","jsxDEV","_jsxDEV","App","_s","webcamRef","recording","setRecording","mediaRecorderRef","recordedChunks","setRecordedChunks","audioRecording","setAudioRecording","audioBlob","setAudioBlob","handleDataAvailable","data","size","prev","concat","handleStartCaptureClick","current","stream","MediaRecorder","mimeType","addEventListener","start","handleStopCaptureClick","stop","handleUpload","length","blob","Blob","type","formData","FormData","append","response","post","console","log","error","handleStartAudioRecording","navigator","mediaDevices","getUserMedia","audio","then","audioChunks","event","push","handleStopAudioRecording","Promise","resolve","undefined","handleAudioUpload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","videoConstraints","width","height","facingMode","ref","onClick","onAudioRecordingStart","onAudioRecordingStop","_c","$RefreshReg$"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/src/App.tsx"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\n\nconst App: React.FC = () => {\n  const webcamRef = useRef<Webcam>(null);\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const [recordedChunks, setRecordedChunks] = useState<Blob[]>([]);\n\n  const [audioRecording, setAudioRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);\n\n  const handleDataAvailable = useCallback(({ data }: BlobEvent) => {\n    if (data.size > 0) {\n      setRecordedChunks((prev) => prev.concat(data));\n    }\n  }, []);\n\n  const handleStartCaptureClick = useCallback(() => {\n    if (webcamRef.current && webcamRef.current.stream) {\n      setRecording(true);\n      mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, { mimeType: 'video/webm' });\n      mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n      mediaRecorderRef.current.start();\n    }\n  }, [handleDataAvailable]);\n\n  const handleStopCaptureClick = useCallback(() => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  }, []);\n\n  const handleUpload = useCallback(async () => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, { type: 'video/webm' });\n      const formData = new FormData();\n      formData.append('video', blob, 'recorded_video.webm');\n      \n      try {\n        const response = await axios.post('http://localhost:8000/upload', formData);\n        console.log('Video uploaded successfully:', response.data);\n        setRecordedChunks([]);\n      } catch (error) {\n        console.error('Error uploading video:', error);\n      }\n    }\n  }, [recordedChunks]);\n\n  const handleStartAudioRecording = useCallback(() => {\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then(stream => {\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        mediaRecorderRef.current.start();\n        setAudioRecording(true);\n\n        const audioChunks: Blob[] = [];\n        mediaRecorderRef.current.addEventListener(\"dataavailable\", event => {\n          audioChunks.push(event.data);\n        });\n\n        mediaRecorderRef.current.addEventListener(\"stop\", () => {\n          const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n          setAudioBlob(audioBlob);\n        });\n      });\n  }, []);\n\n  const handleStopAudioRecording = useCallback((): Promise<Blob | undefined> => {\n    return new Promise((resolve) => {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        setAudioRecording(false);\n        mediaRecorderRef.current.addEventListener(\"stop\", () => {\n          if (audioBlob) {\n            resolve(audioBlob);\n          } else {\n            resolve(undefined);\n          }\n        });\n      } else {\n        resolve(undefined);\n      }\n    });\n  }, [audioBlob]);\n\n  const handleAudioUpload = useCallback(async () => {\n    if (audioBlob) {\n      const formData = new FormData();\n      formData.append('audio', audioBlob, 'recorded_audio.wav');\n      \n      try {\n        const response = await axios.post('http://localhost:8000/upload-audio', formData);\n        console.log('Audio uploaded and transcribed successfully:', response.data);\n        setAudioBlob(null);\n      } catch (error) {\n        console.error('Error uploading and transcribing audio:', error);\n      }\n    }\n  }, [audioBlob]);\n\n  return (\n    <div className=\"App\">\n      <h1>Video Recording App</h1>\n      <Webcam \n        audio={true}\n        videoConstraints={{\n          width: 1280,\n          height: 720,\n          facingMode: \"user\"\n        }}\n        ref={webcamRef}\n      />\n      <div>\n        {recording ? (\n          <button onClick={handleStopCaptureClick}>Stop Video Recording</button>\n        ) : (\n          <button onClick={handleStartCaptureClick}>Start Video Recording</button>\n        )}\n        {recordedChunks.length > 0 && (\n          <button onClick={handleUpload}>Upload Video</button>\n        )}\n      </div>\n      <div>\n        {audioRecording ? (\n          <button onClick={handleStopAudioRecording}>Stop Audio Recording</button>\n        ) : (\n          <button onClick={handleStartAudioRecording}>Start Audio Recording</button>\n        )}\n        {audioBlob && (\n          <button onClick={handleAudioUpload}>Upload Audio</button>\n        )}\n      </div>\n      <Dashboard onAudioRecordingStart={handleStartAudioRecording} onAudioRecordingStop={handleStopAudioRecording} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}