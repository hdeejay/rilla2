{"ast":null,"code":"import { checkExceptions, createWaiter, WaiterState } from \"@smithy/util-waiter\";\nimport { DescribeTableCommand } from \"../commands/DescribeTableCommand\";\nconst checkState = async (client, input) => {\n  let reason;\n  try {\n    const result = await client.send(new DescribeTableCommand(input));\n    reason = result;\n  } catch (exception) {\n    reason = exception;\n    if (exception.name && exception.name == \"ResourceNotFoundException\") {\n      return {\n        state: WaiterState.SUCCESS,\n        reason\n      };\n    }\n  }\n  return {\n    state: WaiterState.RETRY,\n    reason\n  };\n};\nexport const waitForTableNotExists = async (params, input) => {\n  const serviceDefaults = {\n    minDelay: 20,\n    maxDelay: 120\n  };\n  return createWaiter({\n    ...serviceDefaults,\n    ...params\n  }, input, checkState);\n};\nexport const waitUntilTableNotExists = async (params, input) => {\n  const serviceDefaults = {\n    minDelay: 20,\n    maxDelay: 120\n  };\n  const result = await createWaiter({\n    ...serviceDefaults,\n    ...params\n  }, input, checkState);\n  return checkExceptions(result);\n};","map":{"version":3,"names":["checkExceptions","createWaiter","WaiterState","DescribeTableCommand","checkState","client","input","reason","result","send","exception","name","state","SUCCESS","RETRY","waitForTableNotExists","params","serviceDefaults","minDelay","maxDelay","waitUntilTableNotExists"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/@aws-sdk/client-dynamodb/dist-es/waiters/waitForTableNotExists.js"],"sourcesContent":["import { checkExceptions, createWaiter, WaiterState } from \"@smithy/util-waiter\";\nimport { DescribeTableCommand } from \"../commands/DescribeTableCommand\";\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeTableCommand(input));\n        reason = result;\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ResourceNotFoundException\") {\n            return { state: WaiterState.SUCCESS, reason };\n        }\n    }\n    return { state: WaiterState.RETRY, reason };\n};\nexport const waitForTableNotExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 20, maxDelay: 120 };\n    return createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexport const waitUntilTableNotExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 20, maxDelay: 120 };\n    const result = await createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return checkExceptions(result);\n};\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,YAAY,EAAEC,WAAW,QAAQ,qBAAqB;AAChF,SAASC,oBAAoB,QAAQ,kCAAkC;AACvE,MAAMC,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;EACxC,IAAIC,MAAM;EACV,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,IAAIN,oBAAoB,CAACG,KAAK,CAAC,CAAC;IACjEC,MAAM,GAAGC,MAAM;EACnB,CAAC,CACD,OAAOE,SAAS,EAAE;IACdH,MAAM,GAAGG,SAAS;IAClB,IAAIA,SAAS,CAACC,IAAI,IAAID,SAAS,CAACC,IAAI,IAAI,2BAA2B,EAAE;MACjE,OAAO;QAAEC,KAAK,EAAEV,WAAW,CAACW,OAAO;QAAEN;MAAO,CAAC;IACjD;EACJ;EACA,OAAO;IAAEK,KAAK,EAAEV,WAAW,CAACY,KAAK;IAAEP;EAAO,CAAC;AAC/C,CAAC;AACD,OAAO,MAAMQ,qBAAqB,GAAG,MAAAA,CAAOC,MAAM,EAAEV,KAAK,KAAK;EAC1D,MAAMW,eAAe,GAAG;IAAEC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAI,CAAC;EACvD,OAAOlB,YAAY,CAAC;IAAE,GAAGgB,eAAe;IAAE,GAAGD;EAAO,CAAC,EAAEV,KAAK,EAAEF,UAAU,CAAC;AAC7E,CAAC;AACD,OAAO,MAAMgB,uBAAuB,GAAG,MAAAA,CAAOJ,MAAM,EAAEV,KAAK,KAAK;EAC5D,MAAMW,eAAe,GAAG;IAAEC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAI,CAAC;EACvD,MAAMX,MAAM,GAAG,MAAMP,YAAY,CAAC;IAAE,GAAGgB,eAAe;IAAE,GAAGD;EAAO,CAAC,EAAEV,KAAK,EAAEF,UAAU,CAAC;EACvF,OAAOJ,eAAe,CAACQ,MAAM,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}