{"ast":null,"code":"/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  // Hiding the given function\n  Object.defineProperty(this, '_next', {\n    writable: false,\n    enumerable: false,\n    value: next\n  });\n\n  // Is the iterator complete?\n  this.done = false;\n}\n\n/**\n * Next function.\n *\n * @return {object}\n */\n// NOTE: maybe this should dropped for performance?\nIterator.prototype.next = function () {\n  if (this.done) return {\n    done: true\n  };\n  var step = this._next();\n  if (step.done) this.done = true;\n  return step;\n};\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined') Iterator.prototype[Symbol.iterator] = function () {\n  return this;\n};\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n  return new Iterator(function () {\n    if (i >= l) return {\n      done: true\n    };\n    return {\n      done: false,\n      value: args[i++]\n    };\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(null);\n  iterator.done = true;\n  return iterator;\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n  return typeof value === 'object' && value !== null && typeof value.next === 'function';\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;","map":{"version":3,"names":["Iterator","next","Object","defineProperty","writable","enumerable","value","done","prototype","step","_next","Symbol","iterator","of","args","arguments","l","length","i","empty","is","module","exports"],"sources":["/Users/hamzahdeejay/Rilla-BackEnd/rilla-app/node_modules/obliterator/iterator.js"],"sourcesContent":["/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n\n  // Hiding the given function\n  Object.defineProperty(this, '_next', {\n    writable: false,\n    enumerable: false,\n    value: next\n  });\n\n  // Is the iterator complete?\n  this.done = false;\n}\n\n/**\n * Next function.\n *\n * @return {object}\n */\n// NOTE: maybe this should dropped for performance?\nIterator.prototype.next = function() {\n  if (this.done)\n    return {done: true};\n\n  var step = this._next();\n\n  if (step.done)\n    this.done = true;\n\n  return step;\n};\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function() {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function() {\n  var args = arguments,\n      l = args.length,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function() {\n  var iterator = new Iterator(null);\n  iterator.done = true;\n\n  return iterator;\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function(value) {\n  if (value instanceof Iterator)\n    return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,IAAI,EAAE;EAEtB;EACAC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;IACnCC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAEL;EACT,CAAC,CAAC;;EAEF;EACA,IAAI,CAACM,IAAI,GAAG,KAAK;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAP,QAAQ,CAACQ,SAAS,CAACP,IAAI,GAAG,YAAW;EACnC,IAAI,IAAI,CAACM,IAAI,EACX,OAAO;IAACA,IAAI,EAAE;EAAI,CAAC;EAErB,IAAIE,IAAI,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;EAEvB,IAAID,IAAI,CAACF,IAAI,EACX,IAAI,CAACA,IAAI,GAAG,IAAI;EAElB,OAAOE,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA,IAAI,OAAOE,MAAM,KAAK,WAAW,EAC/BX,QAAQ,CAACQ,SAAS,CAACG,MAAM,CAACC,QAAQ,CAAC,GAAG,YAAW;EAC/C,OAAO,IAAI;AACb,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACAZ,QAAQ,CAACa,EAAE,GAAG,YAAW;EACvB,IAAIC,IAAI,GAAGC,SAAS;IAChBC,CAAC,GAAGF,IAAI,CAACG,MAAM;IACfC,CAAC,GAAG,CAAC;EAET,OAAO,IAAIlB,QAAQ,CAAC,YAAW;IAC7B,IAAIkB,CAAC,IAAIF,CAAC,EACR,OAAO;MAACT,IAAI,EAAE;IAAI,CAAC;IAErB,OAAO;MAACA,IAAI,EAAE,KAAK;MAAED,KAAK,EAAEQ,IAAI,CAACI,CAAC,EAAE;IAAC,CAAC;EACxC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAlB,QAAQ,CAACmB,KAAK,GAAG,YAAW;EAC1B,IAAIP,QAAQ,GAAG,IAAIZ,QAAQ,CAAC,IAAI,CAAC;EACjCY,QAAQ,CAACL,IAAI,GAAG,IAAI;EAEpB,OAAOK,QAAQ;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAZ,QAAQ,CAACoB,EAAE,GAAG,UAASd,KAAK,EAAE;EAC5B,IAAIA,KAAK,YAAYN,QAAQ,EAC3B,OAAO,IAAI;EAEb,OACE,OAAOM,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,IAAI,IACd,OAAOA,KAAK,CAACL,IAAI,KAAK,UAAU;AAEpC,CAAC;;AAED;AACA;AACA;AACAoB,MAAM,CAACC,OAAO,GAAGtB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}